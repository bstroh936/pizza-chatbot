{"ast":null,"code":"import _slicedToArray from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import{NavButton}from'../Buttons/index';import{makeStyles}from'@material-ui/core/styles';import Grid from'@material-ui/core/Grid';import{PizzaType,Sauce,Topping}from'./MenuSteps/index';var DisplayComponents={type:PizzaType,sauces:Sauce,topping:Topping};var useStyles=makeStyles(function(theme){return{root:{flexGrow:1,width:'75%'},paper:{padding:theme.spacing(2),textAlign:'center',color:theme.palette.text.secondary}};});function checkAlert(props){//check that a crust and size have been selected\nvar incItem=props.item;var i=incItem!==null&&incItem!==undefined&&incItem.hasOwnProperty('1')?incItem['1']:{crusts:'0',sizes:'0'};var item=i!==null?i:{crusts:'0',sizes:'0'};var c=item.hasOwnProperty('crusts')?item.crusts!=='0':false;var s=item.hasOwnProperty('sizes')?item.sizes!=='0':false;if(!(c&&s)){var msgTitle='Alert';var msg='You must select a valid crust type and size before continuing.';var status=true;var val={status:status,title:msgTitle,msg:msg};props.updateAppState({type:'alert',values:{appValues:{val:val}}});return false;}else{return true;}}export default function MenuStep(props){var classes=useStyles();var updateAppState=props.updateAppState;var triggerNext=props.triggerNext;var botData=props.botStepData;var menu=botData.menu;var pizza=botData.pizza;var stepData=menu.StepObject;var menuType=stepData.menuType;var selected=pizza.GetPizzaItems(menuType);var _React$useState=React.useState(selected),_React$useState2=_slicedToArray(_React$useState,2),items=_React$useState2[0],setItems=_React$useState2[1];var _updateItem=function updateItem(props){var item=props.item;var itemID=item.itemID;var values=item.values;var replace=props.replace;if(replace){var update={};update[itemID]=values;setItems(update);}else{var current=items;current[item.itemID]=values;setItems(current);}};var triggerRet=function triggerRet(props){var nextTrigger=menu.GetStepTrigger(props.action);var updateData={type:props.type,values:{appValues:{step:props.action,pizza:props.pizza,botDisplay:props.botDisplay},stepValues:{isSpecialStep:false,botStepKey:stepData.menuType,botStepMsg:stepData.botMsg,userMsg:props.userMsg,preserveMsg:true,trigger:nextTrigger}}};if(nextTrigger==='specialinstmsg'){updateData.type='inst';updateData.values.appValues.botDisplay='reviewPizza';}else if(nextTrigger==='2'){updateData.type='newOrder';updateData.values.appValues.step='new';updateData.values.appValues.botDisplay='menuStep';}updateAppState(updateData);triggerNext(updateData.values.stepValues);};var handleNext=function handleNext(){var c=menuType==='type'?checkAlert({item:items,updateAppState:updateAppState}):true;if(c){var ret={type:stepData.menuType,items:items};var userMsg=menu.GetUserMsg(ret);ret.userMsg=userMsg;pizza.PizzaItems=ret;var stepID=menu.getStepNum('next');var stepName=menu.getStep(stepID);triggerRet({type:'update',botDisplay:'menuStep',action:stepName,userMsg:userMsg,pizza:pizza});}};var handlePrev=function handlePrev(){var userMsg=\"Go back to \".concat(stepData.prev);var stepID=menu.getStepNum('prev');var stepName=menu.getStep(stepID);triggerRet({type:'update',botDisplay:'menuStep',action:stepName,userMsg:userMsg,pizza:pizza});};var handleRemove=function handleRemove(){var userMsg='Remove this pizza';triggerRet({type:'update',botDisplay:'remove',action:'ask',userMsg:userMsg,pizza:pizza});};var handleCancel=function handleCancel(){var userMsg='Cancel this order';triggerRet({type:'update',botDisplay:'cancel',action:'ask',userMsg:userMsg,pizza:pizza});};var displayType=function displayType(t){switch(t){case'type':case'sauces':return t;default:return'topping';}};var StepDisplay=DisplayComponents[displayType(menuType)];return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(\"div\",{className:\"stepMessage\",children:stepData.botMsg}),/*#__PURE__*/_jsx(StepDisplay,{selected:selected,stepData:stepData,updateItem:function updateItem(p){return _updateItem(p);}}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(NavButton,{caption:\"Back\",onClick:handlePrev})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(NavButton,{caption:\"Remove Pizza\",onClick:handleRemove})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(NavButton,{caption:\"Cancel Order\",onClick:handleCancel})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(NavButton,{caption:\"Next\",onClick:handleNext})})]})]});}","map":{"version":3,"sources":["C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/src/components/AppElements/Steps/MenuStep.jsx"],"names":["React","NavButton","makeStyles","Grid","PizzaType","Sauce","Topping","DisplayComponents","type","sauces","topping","useStyles","theme","root","flexGrow","width","paper","padding","spacing","textAlign","color","palette","text","secondary","checkAlert","props","incItem","item","i","undefined","hasOwnProperty","crusts","sizes","c","s","msgTitle","msg","status","val","title","updateAppState","values","appValues","MenuStep","classes","triggerNext","botData","botStepData","menu","pizza","stepData","StepObject","menuType","selected","GetPizzaItems","useState","items","setItems","updateItem","itemID","replace","update","current","triggerRet","nextTrigger","GetStepTrigger","action","updateData","step","botDisplay","stepValues","isSpecialStep","botStepKey","botStepMsg","botMsg","userMsg","preserveMsg","trigger","handleNext","ret","GetUserMsg","PizzaItems","stepID","getStepNum","stepName","getStep","handlePrev","prev","handleRemove","handleCancel","displayType","t","StepDisplay","p"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {NavButton} from '../Buttons/index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {PizzaType, Sauce, Topping} from './MenuSteps/index';\r\n\r\nconst DisplayComponents = {\r\n  type:PizzaType,\r\n  sauces:Sauce,\r\n  topping:Topping,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '75%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\nfunction checkAlert(props){\r\n  //check that a crust and size have been selected\r\n  const incItem = props.item;    \r\n  const i = incItem!==null&&incItem!==undefined&&incItem.hasOwnProperty('1')?incItem['1']:{crusts:'0',sizes:'0'};\r\n  const item = i!==null?i:{crusts:'0',sizes:'0'};\r\n  const c = item.hasOwnProperty('crusts')?item.crusts!=='0':false;\r\n  const s = item.hasOwnProperty('sizes')?item.sizes!=='0':false;\r\n  if(!(c&&s)){\r\n    const msgTitle = 'Alert'\r\n    const msg = 'You must select a valid crust type and size before continuing.'\r\n    const status = true;\r\n    const val ={status:status,title:msgTitle,msg:msg};\r\n    props.updateAppState({type:'alert', values:{appValues:{val}}});\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\nexport default function MenuStep(props){     \r\n  const classes = useStyles();\r\n  const updateAppState = props.updateAppState;\r\n  const triggerNext = props.triggerNext;\r\n  const botData = props.botStepData;\r\n  const menu = botData.menu;\r\n  const pizza = botData.pizza;\r\n  const stepData = menu.StepObject;\r\n  const menuType = stepData.menuType;\r\n  const selected = pizza.GetPizzaItems(menuType);\r\n  const [items, setItems] = React.useState(selected);\r\n  const updateItem = (props) =>{    \r\n    const item = props.item;\r\n    const itemID = item.itemID;\r\n    const values = item.values;    \r\n    const replace = props.replace;\r\n    if(replace){\r\n      const update = {};\r\n      update[itemID]=values;\r\n      setItems(update);\r\n    } else {\r\n      const current = items;            \r\n      current[item.itemID]=values;\r\n      setItems(current);\r\n    }       \r\n  }\r\n  const triggerRet = (props)=>{\r\n    const nextTrigger = menu.GetStepTrigger(props.action);\r\n\r\n    const updateData={\r\n      type:props.type,\r\n      values:{\r\n      appValues:{\r\n        step:props.action,\r\n        pizza:props.pizza,\r\n        botDisplay:props.botDisplay,\r\n      },      \r\n      stepValues:{\r\n        isSpecialStep:false,\r\n        botStepKey:stepData.menuType,\r\n        botStepMsg:stepData.botMsg,\r\n        userMsg: props.userMsg,\r\n        preserveMsg: true,\r\n        trigger:nextTrigger,\r\n      }}\r\n    };\r\n    if(nextTrigger==='specialinstmsg'){\r\n      updateData.type = 'inst'\r\n      updateData.values.appValues.botDisplay = 'reviewPizza';      \r\n    } else if(nextTrigger==='2'){\r\n      updateData.type = 'newOrder';\r\n      updateData.values.appValues.step='new';\r\n      updateData.values.appValues.botDisplay ='menuStep'\r\n    }\r\n    updateAppState(updateData);\r\n    triggerNext(updateData.values.stepValues);\r\n  }\r\n  const handleNext = ()=>{     \r\n    const c = menuType==='type'?checkAlert({item:items, updateAppState:updateAppState}):true;      \r\n    if(c){\r\n      const ret = {type:stepData.menuType, items:items};\r\n      const userMsg = menu.GetUserMsg(ret);     \r\n      ret.userMsg = userMsg;\r\n      pizza.PizzaItems = ret;\r\n      const stepID = menu.getStepNum('next');\r\n      const stepName = menu.getStep(stepID);\r\n      triggerRet({type:'update', botDisplay:'menuStep', action:stepName, userMsg:userMsg, pizza:pizza}) \r\n    }    \r\n  }\r\n  const handlePrev = ()=>{    \r\n    const userMsg = `Go back to ${stepData.prev}`;\r\n    const stepID = menu.getStepNum('prev');\r\n    const stepName = menu.getStep(stepID);\r\n    triggerRet({type:'update', botDisplay:'menuStep', action:stepName, userMsg:userMsg, pizza:pizza})\r\n  }\r\n  const handleRemove = ()=>{    \r\n    const userMsg = 'Remove this pizza';\r\n    triggerRet({type:'update', botDisplay:'remove', action:'ask', userMsg:userMsg, pizza:pizza})\r\n  }\r\n  const handleCancel = ()=>{    \r\n    const userMsg = 'Cancel this order';\r\n    triggerRet({type:'update', botDisplay:'cancel', action:'ask', userMsg:userMsg, pizza:pizza})\r\n  }\r\n  const displayType = (t)=>{\r\n    switch(t){\r\n      case 'type':        \r\n      case 'sauces':\r\n        return t;\r\n      default:\r\n        return 'topping';\r\n    }\r\n  }  \r\n  const StepDisplay = DisplayComponents[displayType(menuType)];\r\n  return(\r\n    <div className={classes.root}>\r\n\r\n      <div className=\"stepMessage\">{stepData.botMsg}</div>\r\n      <StepDisplay selected={selected} stepData={stepData} updateItem={(p)=>{return (updateItem(p))}}/>\r\n      <Grid container spacing={1}>\r\n        <Grid item>\r\n          <NavButton caption='Back' onClick={handlePrev}/>\r\n        </Grid>\r\n        <Grid item>\r\n          <NavButton caption='Remove Pizza' onClick={handleRemove}/>\r\n        </Grid>\r\n        <Grid item>\r\n          <NavButton caption='Cancel Order' onClick={handleCancel}/>\r\n        </Grid>\r\n        <Grid item>\r\n          <NavButton caption='Next' onClick={handleNext}/>\r\n        </Grid>\r\n      </Grid>\r\n    </div>      \r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}