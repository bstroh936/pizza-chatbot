{"ast":null,"code":"import _objectSpread from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _classCallCheck from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import ChatBot from'../chatbot/ChatBot';import{ThemeProvider}from'styled-components';import BotStep from'./BotStep';import logo from'../../resources/SliceLogo.png';import'../../css/OrderStyle.css';var SliceBot=/*#__PURE__*/function(_React$Component){_inherits(SliceBot,_React$Component);var _super=_createSuper(SliceBot);function SliceBot(props){var _this;_classCallCheck(this,SliceBot);_this=_super.call(this,props);_this.handleEnd=_this.handleEnd.bind(_assertThisInitialized(_this));return _this;}_createClass(SliceBot,[{key:\"handleEnd\",value:function handleEnd(){//load order summary page    \nthis.props.onAppUpdate({val:'complete'});}},{key:\"render\",value:function render(){var _this$props=this.props,showBot=_this$props.showBot,passThroughProps=_objectWithoutProperties(_this$props,[\"showBot\"]);if(!showBot){return null;}return/*#__PURE__*/_jsx(\"div\",{className:\"chatBot\",children:/*#__PURE__*/_jsx(ThemeProvider,{theme:{background:'#f5f5f5',fontFamily:'Montserrat',headerBgColor:'#DD841F',headerFontColor:'#fff',headerFontSize:'15px',botBubbleColor:'#DD841F',botFontColor:'#fff',userBubbleColor:'#fff',userFontColor:'#4a4a4a',marginTop:'60px'},children:/*#__PURE__*/_jsx(ChatBot,{headerTitle:\"Slice Bot\",handleEnd:this.handleEnd,floating:false,botAvatar:logo,steps:[{id:'1',message:'Welcome to Slice!',trigger:'2'},{id:'2',message:'Please enter a name for the order',trigger:'ordername'},{id:'ordername',user:true,placeholder:'Please enter a name...',trigger:'pizzabuilder'},{id:'pizzabuilder',placeholder:'Choose an option',component:/*#__PURE__*/_jsx(BotStep,_objectSpread({},passThroughProps)),waitAction:true,replace:true,trigger:'pizzabuilder'},{id:'specialinstmsg',message:'Would you like to add any special instructions?',trigger:'specialinstques'},{id:'specialinstques',options:[{value:'yes',label:'Yes',trigger:'specialinstentry'},{value:'no',label:'No, Lets review this pizza',trigger:'pizzabuilder'}]},{id:'specialinstentry',user:true,trigger:'pizzabuilder'},{id:'endmsg1',message:'Thank you for using Slice!',trigger:'endmsg2'},{id:'endmsg2',message:'Your order is confirmed. Please click OK to continue.',trigger:'endmsg3'},{id:'endmsg3',options:[{value:'endbot',label:'OK',trigger:'endbot'}]},{id:'endbot',message:'Good bye',end:true}]})})});}}]);return SliceBot;}(React.Component);export{SliceBot as default};","map":{"version":3,"sources":["C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/src/components/SliceBot/BotDisplay.jsx"],"names":["React","ChatBot","ThemeProvider","BotStep","logo","SliceBot","props","handleEnd","bind","onAppUpdate","val","showBot","passThroughProps","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","marginTop","id","message","trigger","user","placeholder","component","waitAction","replace","options","value","label","end","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ChatBot from '../chatbot/ChatBot';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport BotStep from './BotStep';\r\nimport logo from '../../resources/SliceLogo.png';\r\nimport '../../css/OrderStyle.css';\r\n\r\nexport default class SliceBot extends React.Component{\r\n  constructor(props){\r\n    super(props)    \r\n    this.handleEnd = this.handleEnd.bind(this);\r\n  }\r\n  handleEnd(){\r\n    //load order summary page    \r\n    this.props.onAppUpdate({val:'complete'});\r\n  }        \r\n  render(){\r\n    const {showBot, ...passThroughProps} = this.props           \r\n    if(!showBot){return (null)}        \r\n    return (   \r\n      <div className=\"chatBot\" >\r\n        <ThemeProvider theme={{\r\n              background: '#f5f5f5',\r\n              fontFamily: 'Montserrat',\r\n              headerBgColor: '#DD841F',\r\n              headerFontColor: '#fff',\r\n              headerFontSize: '15px',\r\n              botBubbleColor: '#DD841F',\r\n              botFontColor: '#fff',\r\n              userBubbleColor: '#fff',\r\n              userFontColor: '#4a4a4a',\r\n              marginTop: '60px',\r\n          }}>\r\n      <ChatBot headerTitle=\"Slice Bot\"\r\n        handleEnd = {this.handleEnd}\r\n        floating={false}\r\n        botAvatar={logo}                \r\n        steps={[\r\n          {\r\n            id: '1',\r\n            message: 'Welcome to Slice!',            \r\n            trigger: '2',\r\n                       \r\n          },\r\n          {\r\n            id: '2',\r\n            message: 'Please enter a name for the order',\r\n            trigger: 'ordername',\r\n                        \r\n          },\r\n          {\r\n            id: 'ordername',\r\n            user:true,\r\n            placeholder: 'Please enter a name...',\r\n            trigger: 'pizzabuilder',\r\n               \r\n          },\r\n          {\r\n            id: 'pizzabuilder',\r\n            placeholder: 'Choose an option',\r\n            component: <BotStep {...passThroughProps} />,              \r\n            waitAction: true, \r\n            replace: true,                        \r\n            trigger: 'pizzabuilder',\r\n                       \r\n          },\r\n          {\r\n            id:'specialinstmsg',\r\n            message:'Would you like to add any special instructions?',\r\n            trigger: 'specialinstques',\r\n            \r\n          },\r\n          {\r\n            id:'specialinstques',\r\n            options: [\r\n              {value: 'yes', label:'Yes', trigger:'specialinstentry'},\r\n              {value: 'no', label:'No, Lets review this pizza', trigger:'pizzabuilder'},\r\n              ],\r\n            \r\n          },\r\n          {\r\n            id:'specialinstentry',\r\n            user:true,\r\n            trigger: 'pizzabuilder',\r\n           \r\n          },\r\n          {\r\n            id: 'endmsg1',         \r\n            message: 'Thank you for using Slice!',\r\n            trigger: 'endmsg2',            \r\n          },\r\n          {\r\n            id: 'endmsg2',         \r\n            message: 'Your order is confirmed. Please click OK to continue.',\r\n            trigger: 'endmsg3',            \r\n          },\r\n          {\r\n            id: 'endmsg3',         \r\n            options: [{value: 'endbot', label:'OK', trigger:'endbot'}],                        \r\n          },\r\n          {\r\n            id: 'endbot',         \r\n            message: 'Good bye',\r\n            end: true,            \r\n          },\r\n          ]}\r\n\r\n        />\r\n          </ThemeProvider>\r\n      </div>   \r\n    );   \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}