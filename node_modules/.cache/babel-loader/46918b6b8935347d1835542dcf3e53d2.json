{"ast":null,"code":"import _classCallCheck from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var PizzaOrder=/*#__PURE__*/function(){function PizzaOrder(){var _this=this;_classCallCheck(this,PizzaOrder);this.UpdateOrder=function(props){switch(props.item){case'name':_this.orderName=props.name;break;case'savePizza':var pizza=props.pizza;var id=pizza.PizzaID;if(id===0){pizza.PizzaID=_this.lastID+1;_this.lastID++;}_this.pizzas=SavePizzaToOrder(props.pizza,_this.pizzas);break;case'removePizza':if(props.id!==0){var i=_this.pizzas.findIndex(function(p){return p.PizzaID===props.id;});if(i!==-1){_this.pizzas.splice(i,1);}}break;default:}return _this;};this.orderName=false;this.pizzas=[];this.lastID=0;}_createClass(PizzaOrder,[{key:\"GetPizzaByID\",value:function GetPizzaByID(id){var i=this.pizzas.findIndex(function(p){return p.PizzaID===id;});if(i!==-1){return this.pizzas[i];}else{return false;}}},{key:\"NewOrder\",get:function get(){var n=new PizzaOrder();return n;}},{key:\"ordername\",set:function set(val){this.orderName=val;},get:function get(){return this.orderName;}},{key:\"PizzaCount\",get:function get(){return this.pizzas.length;}},{key:\"PizzaList\",get:function get(){return this.pizzas.map(function(p){return p.PizzaID;});}},{key:\"OrderSummary\",get:function get(){return{name:this.orderName,pizzas:this.pizzas,cnt:this.pizzas.length};}}]);return PizzaOrder;}();export default PizzaOrder;function SavePizzaToOrder(current,all){if(current===null)return null;var id=current.PizzaID;var i=all.findIndex(function(p){return p.PizzaID===id;});if(i!==-1){//Override existing pizza\nreturn all.splice(i,1,current);}else{return all.concat(current);}}","map":{"version":3,"sources":["C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/src/components/PizzaOrder.jsx"],"names":["PizzaOrder","UpdateOrder","props","item","orderName","name","pizza","id","PizzaID","lastID","pizzas","SavePizzaToOrder","i","findIndex","p","splice","n","val","length","map","cnt","current","all","concat"],"mappings":"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","sourcesContent":["class PizzaOrder {\r\n  constructor() {\r\n    this.orderName= false;\r\n    this.pizzas= [];    \r\n    this.lastID = 0;                        \r\n  }\r\n  get NewOrder(){\r\n    const n = new PizzaOrder();\r\n    return n;\r\n  }\r\n  UpdateOrder = (props) => {\r\n    switch(props.item){\r\n      case 'name':\r\n        this.orderName = props.name;\r\n        break;      \r\n      case 'savePizza':\r\n        const pizza = props.pizza;\r\n        const id = pizza.PizzaID\r\n        if(id===0){\r\n          pizza.PizzaID = this.lastID+1;\r\n          this.lastID++;\r\n        }\r\n        this.pizzas = SavePizzaToOrder(props.pizza, this.pizzas);\r\n        break;      \r\n      case 'removePizza':\r\n        if(props.id!==0){           \r\n          const i = this.pizzas.findIndex(p => p.PizzaID === props.id);    \r\n          if(i!==-1){\r\n            this.pizzas.splice(i,1);      \r\n          }\r\n        }  \r\n        break;\r\n      default:        \r\n    }\r\n    return this;\r\n  }\r\n  GetPizzaByID(id){\r\n    const i = this.pizzas.findIndex(p => p.PizzaID === id);\r\n    if(i!==-1){\r\n      return this.pizzas[i];      \r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  set ordername(val){\r\n    this.orderName = val;\r\n  }   \r\n  get ordername(){\r\n    return this.orderName;\r\n  }      \r\n  get PizzaCount(){\r\n    return this.pizzas.length;\r\n  }  \r\n  get PizzaList(){\r\n    return this.pizzas.map((p)=> {return p.PizzaID})\r\n  }\r\n  get OrderSummary(){\r\n    return {name:this.orderName, pizzas:this.pizzas, cnt:this.pizzas.length}\r\n  }\r\n}\r\nexport default PizzaOrder;\r\n\r\nfunction SavePizzaToOrder(current, all){    \r\n  if(current===null) return null;      \r\n  const id = current.PizzaID;\r\n  const i = all.findIndex(p => p.PizzaID === id);\r\n  if(i!==-1){\r\n    //Override existing pizza\r\n    return all.splice(i,1,current);\r\n  }\r\n  else {    \r\n    return all.concat(current);\r\n  }  \r\n}"]},"metadata":{},"sourceType":"module"}