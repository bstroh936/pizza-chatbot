{"ast":null,"code":"import _classCallCheck from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var instance=null;var noop=function noop(){};var Recognition=/*#__PURE__*/function(){_createClass(Recognition,null,[{key:\"isSupported\",value:function isSupported(){return'webkitSpeechRecognition'in window;}/**\r\n   * Creates an instance of Recognition.\r\n   * @param {function} [onChange] callback on change\r\n   * @param {function} [onEnd]  callback on and\r\n   * @param {function} [onStop]  callback on stop\r\n   * @param {string} [lang='en'] recognition lang\r\n   * @memberof Recognition\r\n   * @constructor\r\n   */}]);function Recognition(){var onChange=arguments.length>0&&arguments[0]!==undefined?arguments[0]:noop;var onEnd=arguments.length>1&&arguments[1]!==undefined?arguments[1]:noop;var onStop=arguments.length>2&&arguments[2]!==undefined?arguments[2]:noop;var lang=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'en';_classCallCheck(this,Recognition);if(!instance){instance=this;}this.state={inputValue:'',lang:lang,onChange:onChange,onEnd:onEnd,onStop:onStop};this.onResult=this.onResult.bind(this);this.onEnd=this.onEnd.bind(this);this.setup();return instance;}/**\r\n   * Handler for recognition change event\r\n   * @param {string} interimTranscript\r\n   * @memberof Recognition\r\n   * @private\r\n   */_createClass(Recognition,[{key:\"onChange\",value:function onChange(interimTranscript){var onChange=this.state.onChange;this.setState({inputValue:interimTranscript});onChange(interimTranscript);}/**\r\n   * Handler for recognition change event when its final\r\n   * @param {string} finalTranscript\r\n   * @memberof Recognition\r\n   * @private\r\n   */},{key:\"onFinal\",value:function onFinal(finalTranscript){this.setState({inputValue:finalTranscript});this.recognition.stop();}/**\r\n   * Handler for recognition end event\r\n   * @memberof Recognition\r\n   * @private\r\n   */},{key:\"onEnd\",value:function onEnd(){var _this$state=this.state,onStop=_this$state.onStop,onEnd=_this$state.onEnd,force=_this$state.force;this.setState({speaking:false});if(force){onStop();}else{onEnd();}}/**\r\n   * Handler for recognition result event\r\n   * @memberof Recognition\r\n   * @private\r\n   */},{key:\"onResult\",value:function onResult(event){var interimTranscript='';var finalTranscript='';for(var i=event.resultIndex;i<event.results.length;i+=1){if(event.results[i].isFinal){finalTranscript+=event.results[i][0].transcript;this.onFinal(finalTranscript);}else{interimTranscript+=event.results[i][0].transcript;this.onChange(interimTranscript);}}}/**\r\n   * method for updating the instance state\r\n   * @param {object} nextState\r\n   * @memberof Recognition\r\n   * @private\r\n   */},{key:\"setState\",value:function setState(nextState){this.state=Object.assign({},this.state,nextState);}/**\r\n   * setup the browser recognition\r\n   * @returns {Recognition}\r\n   * @memberof Recognition\r\n   * @public\r\n   */},{key:\"setup\",value:function setup(){if(!Recognition.isSupported()){return this;}var _window=window,webkitSpeechRecognition=_window.webkitSpeechRecognition;this.recognition=new webkitSpeechRecognition();this.recognition.continuous=true;this.recognition.interimResults=true;this.recognition.lang=this.state.lang;this.recognition.onresult=this.onResult;this.recognition.onend=this.onEnd;return this;}/**\r\n   * change the recognition lang and resetup\r\n   * @param {string} lang the new lang\r\n   * @returns {Recognition}\r\n   * @memberof Recognition\r\n   * @public\r\n   */},{key:\"setLang\",value:function setLang(lang){this.setState({lang:lang});this.setup();return this;}/**\r\n   * toggle the recognition\r\n   * @returns {Recognition}\r\n   * @memberof Recognition\r\n   * @public\r\n   */},{key:\"speak\",value:function speak(){if(!Recognition.isSupported()){return this;}var speaking=this.state.speaking;if(!speaking){this.recognition.start();this.setState({speaking:true,inputValue:''});}else{this.setState({force:true});this.recognition.stop();}return this;}}]);return Recognition;}();export{Recognition as default};","map":{"version":3,"sources":["C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/src/components/chatbot/recognition.js"],"names":["instance","noop","Recognition","window","onChange","onEnd","onStop","lang","state","inputValue","onResult","bind","setup","interimTranscript","setState","finalTranscript","recognition","stop","force","speaking","event","i","resultIndex","results","length","isFinal","transcript","onFinal","nextState","Object","assign","isSupported","webkitSpeechRecognition","continuous","interimResults","onresult","onend","start"],"mappings":"kVAAA,GAAIA,CAAAA,QAAQ,CAAG,IAAf,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CAAE,CAArB,C,GAEqBC,CAAAA,W,uGACE,CACnB,MAAO,2BAA6BC,CAAAA,MAApC,CACD,CAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K,IACE,sBAAuE,IAA3DC,CAAAA,QAA2D,2DAAhDH,IAAgD,IAA1CI,CAAAA,KAA0C,2DAAlCJ,IAAkC,IAA5BK,CAAAA,MAA4B,2DAAnBL,IAAmB,IAAbM,CAAAA,IAAa,2DAAN,IAAM,mCACrE,GAAI,CAACP,QAAL,CAAe,CACbA,QAAQ,CAAG,IAAX,CACD,CACD,KAAKQ,KAAL,CAAa,CACXC,UAAU,CAAE,EADD,CAEXF,IAAI,CAAJA,IAFW,CAGXH,QAAQ,CAARA,QAHW,CAIXC,KAAK,CAALA,KAJW,CAKXC,MAAM,CAANA,MALW,CAAb,CAQA,KAAKI,QAAL,CAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB,CACA,KAAKN,KAAL,CAAa,KAAKA,KAAL,CAAWM,IAAX,CAAgB,IAAhB,CAAb,CAEA,KAAKC,KAAL,GAEA,MAAOZ,CAAAA,QAAP,CACD,CAED;AACF;AACA;AACA;AACA;AACA,K,kEACWa,iB,CAAmB,IAClBT,CAAAA,QADkB,CACL,KAAKI,KADA,CAClBJ,QADkB,CAE1B,KAAKU,QAAL,CAAc,CACZL,UAAU,CAAEI,iBADA,CAAd,EAGAT,QAAQ,CAACS,iBAAD,CAAR,CACD,CAED;AACF;AACA;AACA;AACA;AACA,K,wCACUE,e,CAAiB,CACvB,KAAKD,QAAL,CAAc,CACZL,UAAU,CAAEM,eADA,CAAd,EAGA,KAAKC,WAAL,CAAiBC,IAAjB,GACD,CAED;AACF;AACA;AACA;AACA,K,qCACU,iBAC2B,KAAKT,KADhC,CACEF,MADF,aACEA,MADF,CACUD,KADV,aACUA,KADV,CACiBa,KADjB,aACiBA,KADjB,CAEN,KAAKJ,QAAL,CAAc,CAAEK,QAAQ,CAAE,KAAZ,CAAd,EACA,GAAID,KAAJ,CAAW,CACTZ,MAAM,GACP,CAFD,IAEO,CACLD,KAAK,GACN,CACF,CAED;AACF;AACA;AACA;AACA,K,0CACWe,K,CAAO,CACd,GAAIP,CAAAA,iBAAiB,CAAG,EAAxB,CACA,GAAIE,CAAAA,eAAe,CAAG,EAAtB,CAEA,IAAK,GAAIM,CAAAA,CAAC,CAAGD,KAAK,CAACE,WAAnB,CAAgCD,CAAC,CAAGD,KAAK,CAACG,OAAN,CAAcC,MAAlD,CAA0DH,CAAC,EAAI,CAA/D,CAAkE,CAChE,GAAID,KAAK,CAACG,OAAN,CAAcF,CAAd,EAAiBI,OAArB,CAA8B,CAC5BV,eAAe,EAAIK,KAAK,CAACG,OAAN,CAAcF,CAAd,EAAiB,CAAjB,EAAoBK,UAAvC,CACA,KAAKC,OAAL,CAAaZ,eAAb,EACD,CAHD,IAGO,CACLF,iBAAiB,EAAIO,KAAK,CAACG,OAAN,CAAcF,CAAd,EAAiB,CAAjB,EAAoBK,UAAzC,CACA,KAAKtB,QAAL,CAAcS,iBAAd,EACD,CACF,CACF,CAED;AACF;AACA;AACA;AACA;AACA,K,0CACWe,S,CAAW,CAClB,KAAKpB,KAAL,CAAaqB,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkB,KAAKtB,KAAvB,CAA8BoB,SAA9B,CAAb,CACD,CAED;AACF;AACA;AACA;AACA;AACA,K,qCACU,CACN,GAAI,CAAC1B,WAAW,CAAC6B,WAAZ,EAAL,CAAgC,CAC9B,MAAO,KAAP,CACD,CAHK,YAK8B5B,MAL9B,CAKE6B,uBALF,SAKEA,uBALF,CAON,KAAKhB,WAAL,CAAmB,GAAIgB,CAAAA,uBAAJ,EAAnB,CACA,KAAKhB,WAAL,CAAiBiB,UAAjB,CAA8B,IAA9B,CACA,KAAKjB,WAAL,CAAiBkB,cAAjB,CAAkC,IAAlC,CACA,KAAKlB,WAAL,CAAiBT,IAAjB,CAAwB,KAAKC,KAAL,CAAWD,IAAnC,CACA,KAAKS,WAAL,CAAiBmB,QAAjB,CAA4B,KAAKzB,QAAjC,CACA,KAAKM,WAAL,CAAiBoB,KAAjB,CAAyB,KAAK/B,KAA9B,CACA,MAAO,KAAP,CACD,CAED;AACF;AACA;AACA;AACA;AACA;AACA,K,wCACUE,I,CAAM,CACZ,KAAKO,QAAL,CAAc,CAAEP,IAAI,CAAJA,IAAF,CAAd,EACA,KAAKK,KAAL,GACA,MAAO,KAAP,CACD,CAED;AACF;AACA;AACA;AACA;AACA,K,qCACU,CACN,GAAI,CAACV,WAAW,CAAC6B,WAAZ,EAAL,CAAgC,CAC9B,MAAO,KAAP,CACD,CAHK,GAIEZ,CAAAA,QAJF,CAIe,KAAKX,KAJpB,CAIEW,QAJF,CAKN,GAAI,CAACA,QAAL,CAAe,CACb,KAAKH,WAAL,CAAiBqB,KAAjB,GACA,KAAKvB,QAAL,CAAc,CACZK,QAAQ,CAAE,IADE,CAEZV,UAAU,CAAE,EAFA,CAAd,EAID,CAND,IAMO,CACL,KAAKK,QAAL,CAAc,CACZI,KAAK,CAAE,IADK,CAAd,EAGA,KAAKF,WAAL,CAAiBC,IAAjB,GACD,CACD,MAAO,KAAP,CACD,C,kCArKkBf,W","sourcesContent":["let instance = null;\r\n\r\nconst noop = () => {};\r\n\r\nexport default class Recognition {\r\n  static isSupported() {\r\n    return 'webkitSpeechRecognition' in window;\r\n  }\r\n\r\n  /**\r\n   * Creates an instance of Recognition.\r\n   * @param {function} [onChange] callback on change\r\n   * @param {function} [onEnd]  callback on and\r\n   * @param {function} [onStop]  callback on stop\r\n   * @param {string} [lang='en'] recognition lang\r\n   * @memberof Recognition\r\n   * @constructor\r\n   */\r\n  constructor(onChange = noop, onEnd = noop, onStop = noop, lang = 'en') {\r\n    if (!instance) {\r\n      instance = this;\r\n    }\r\n    this.state = {\r\n      inputValue: '',\r\n      lang,\r\n      onChange,\r\n      onEnd,\r\n      onStop\r\n    };\r\n\r\n    this.onResult = this.onResult.bind(this);\r\n    this.onEnd = this.onEnd.bind(this);\r\n\r\n    this.setup();\r\n\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * Handler for recognition change event\r\n   * @param {string} interimTranscript\r\n   * @memberof Recognition\r\n   * @private\r\n   */\r\n  onChange(interimTranscript) {\r\n    const { onChange } = this.state;\r\n    this.setState({\r\n      inputValue: interimTranscript\r\n    });\r\n    onChange(interimTranscript);\r\n  }\r\n\r\n  /**\r\n   * Handler for recognition change event when its final\r\n   * @param {string} finalTranscript\r\n   * @memberof Recognition\r\n   * @private\r\n   */\r\n  onFinal(finalTranscript) {\r\n    this.setState({\r\n      inputValue: finalTranscript\r\n    });\r\n    this.recognition.stop();\r\n  }\r\n\r\n  /**\r\n   * Handler for recognition end event\r\n   * @memberof Recognition\r\n   * @private\r\n   */\r\n  onEnd() {\r\n    const { onStop, onEnd, force } = this.state;\r\n    this.setState({ speaking: false });\r\n    if (force) {\r\n      onStop();\r\n    } else {\r\n      onEnd();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handler for recognition result event\r\n   * @memberof Recognition\r\n   * @private\r\n   */\r\n  onResult(event) {\r\n    let interimTranscript = '';\r\n    let finalTranscript = '';\r\n\r\n    for (let i = event.resultIndex; i < event.results.length; i += 1) {\r\n      if (event.results[i].isFinal) {\r\n        finalTranscript += event.results[i][0].transcript;\r\n        this.onFinal(finalTranscript);\r\n      } else {\r\n        interimTranscript += event.results[i][0].transcript;\r\n        this.onChange(interimTranscript);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * method for updating the instance state\r\n   * @param {object} nextState\r\n   * @memberof Recognition\r\n   * @private\r\n   */\r\n  setState(nextState) {\r\n    this.state = Object.assign({}, this.state, nextState);\r\n  }\r\n\r\n  /**\r\n   * setup the browser recognition\r\n   * @returns {Recognition}\r\n   * @memberof Recognition\r\n   * @public\r\n   */\r\n  setup() {\r\n    if (!Recognition.isSupported()) {\r\n      return this;\r\n    }\r\n\r\n    const { webkitSpeechRecognition } = window;\r\n\r\n    this.recognition = new webkitSpeechRecognition();\r\n    this.recognition.continuous = true;\r\n    this.recognition.interimResults = true;\r\n    this.recognition.lang = this.state.lang;\r\n    this.recognition.onresult = this.onResult;\r\n    this.recognition.onend = this.onEnd;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * change the recognition lang and resetup\r\n   * @param {string} lang the new lang\r\n   * @returns {Recognition}\r\n   * @memberof Recognition\r\n   * @public\r\n   */\r\n  setLang(lang) {\r\n    this.setState({ lang });\r\n    this.setup();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * toggle the recognition\r\n   * @returns {Recognition}\r\n   * @memberof Recognition\r\n   * @public\r\n   */\r\n  speak() {\r\n    if (!Recognition.isSupported()) {\r\n      return this;\r\n    }\r\n    const { speaking } = this.state;\r\n    if (!speaking) {\r\n      this.recognition.start();\r\n      this.setState({\r\n        speaking: true,\r\n        inputValue: ''\r\n      });\r\n    } else {\r\n      this.setState({\r\n        force: true\r\n      });\r\n      this.recognition.stop();\r\n    }\r\n    return this;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}