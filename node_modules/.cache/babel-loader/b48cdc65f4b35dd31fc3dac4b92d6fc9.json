{"ast":null,"code":"var possibilities = {\n  lowerCased: 'abcdefghijklmnopqrstuvwxyz',\n  capitals: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  numbers: '0123456789',\n  special: '~!@#$%^&()_+-={}[];\\','\n};\n\nfunction randomId(len, pattern) {\n  if (!len) len = 30;\n  if (!pattern) pattern = 'aA0';\n  var chars = '';\n  pattern.split('').forEach(function (a) {\n    if (!isNaN(parseInt(a))) {\n      chars += possibilities.numbers;\n    } else if (/[a-z]/.test(a)) {\n      chars += possibilities.lowerCased;\n    } else if (/[A-Z]/.test(a)) {\n      chars += possibilities.capitals;\n    } else {\n      chars += possibilities.special;\n    }\n  });\n  var result = '';\n\n  for (var i = 0; i < len; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n\n  return result;\n}\n\nmodule.exports = randomId;","map":{"version":3,"sources":["C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/node_modules/random-id/index.js"],"names":["possibilities","lowerCased","capitals","numbers","special","randomId","len","pattern","chars","split","forEach","a","isNaN","parseInt","test","result","i","charAt","Math","floor","random","length","module","exports"],"mappings":"AACA,IAAIA,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAE,4BADM;AAElBC,EAAAA,QAAQ,EAAE,4BAFQ;AAGlBC,EAAAA,OAAO,EAAE,YAHS;AAIlBC,EAAAA,OAAO,EAAE;AAJS,CAApB;;AAOA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,OAAvB,EAAgC;AAC9B,MAAI,CAACD,GAAL,EAAUA,GAAG,GAAG,EAAN;AACV,MAAI,CAACC,OAAL,EAAcA,OAAO,GAAG,KAAV;AAEd,MAAIC,KAAK,GAAG,EAAZ;AAEAD,EAAAA,OAAO,CAACE,KAAR,CAAc,EAAd,EAAkBC,OAAlB,CAA0B,UAACC,CAAD,EAAO;AAC/B,QAAI,CAACC,KAAK,CAACC,QAAQ,CAACF,CAAD,CAAT,CAAV,EAAyB;AACvBH,MAAAA,KAAK,IAAIR,aAAa,CAACG,OAAvB;AACD,KAFD,MAEO,IAAI,QAAQW,IAAR,CAAaH,CAAb,CAAJ,EAAqB;AAC1BH,MAAAA,KAAK,IAAIR,aAAa,CAACC,UAAvB;AACD,KAFM,MAEA,IAAI,QAAQa,IAAR,CAAaH,CAAb,CAAJ,EAAqB;AAC1BH,MAAAA,KAAK,IAAIR,aAAa,CAACE,QAAvB;AACD,KAFM,MAEA;AACLM,MAAAA,KAAK,IAAIR,aAAa,CAACI,OAAvB;AACD;AACF,GAVD;AAYA,MAAIW,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,GAApB,EAAyBU,CAAC,EAA1B,EAA8B;AAC5BD,IAAAA,MAAM,IAAIP,KAAK,CAACS,MAAN,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,KAAK,CAACa,MAAjC,CAAb,CAAV;AACD;;AAED,SAAON,MAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBlB,QAAjB","sourcesContent":["\r\nvar possibilities = {\r\n  lowerCased: 'abcdefghijklmnopqrstuvwxyz',\r\n  capitals: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\r\n  numbers: '0123456789',\r\n  special: '~!@#$%^&()_+-={}[];\\','\r\n};\r\n\r\nfunction randomId(len, pattern) {\r\n  if (!len) len = 30;\r\n  if (!pattern) pattern = 'aA0';\r\n\r\n  var chars = '';\r\n\r\n  pattern.split('').forEach((a) => {\r\n    if (!isNaN(parseInt(a))) {\r\n      chars += possibilities.numbers;\r\n    } else if (/[a-z]/.test(a)) {\r\n      chars += possibilities.lowerCased;\r\n    } else if (/[A-Z]/.test(a)) {\r\n      chars += possibilities.capitals;\r\n    } else {\r\n      chars += possibilities.special;\r\n    }\r\n  });\r\n\r\n  var result = '';\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * chars.length)); \r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports = randomId;\r\n"]},"metadata":{},"sourceType":"script"}