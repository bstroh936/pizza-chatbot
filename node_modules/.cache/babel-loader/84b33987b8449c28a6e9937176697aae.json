{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\TheTOP\\\\Documents\\\\GitHub\\\\pizza-chatbot-chk4\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\TheTOP\\\\Documents\\\\GitHub\\\\pizza-chatbot-chk4\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import Random from'random-id';import Pizza from'./Pizza';import PropTypes from'prop-types';var PizzaOrder=/*#__PURE__*/function(){function PizzaOrder(){_classCallCheck(this,PizzaOrder);this.orderDate=new Date();var mon=this.orderDate.getMonth()+1;var day=this.orderDate.getDate()+1;var m=mon<10?'0'+mon:mon+'';var d=day<10?'0'+day:day+'';this.shortID='-'+m+d;this.receiptNum=Random(8)+this.shortID;this.orderName='';this.pickUpID='';this.pizzas=[];this.pizzaCnt=0;this.isEdit=false;this.editID=0;}_createClass(PizzaOrder,[{key:\"addNewPizza\",value:function addNewPizza(id){var oSize=this.pizzas.length;var cnt=this.pizzaCnt;if(oSize!==cnt){new Error(\"Pizza Array Size Error\");}else if(id!==cnt+1){new Error(\"New Pizza ID Error\");}else{var p=new Pizza(id);this.pizzas=this.pizzas.concat(p);this.pizzaCnt++;return p;}}},{key:\"selectPizza\",value:function selectPizza(id){var i=this.pizzas.findIndex(function(p){return p.PizzaID===id;});if(i!==-1){return this.pizzas[i];}else{return null;}}},{key:\"editPizza\",value:function editPizza(pizza){var newID=pizza.PizzaID;var i=this.pizzas.findIndex(function(p){return p.PizzaID===newID;});if(i!==-1){var p=pizza;this.pizzas.splice(i,1,p);}}},{key:\"removePizza\",value:function removePizza(id){var i=this.pizzas.findIndex(function(p){return p.PizzaID===id;});if(i!==-1){this.pizzas.splice(i,1);this.pizzaCnt--;}}},{key:\"getPizza\",value:function getPizza(id){var pizza=this.pizzas.filter(function(p){return p.PizzaID===id;})[0];if(pizza===null){return null;}var title='Pizza #'+pizza.PizzaID+' is a:';var pizzaType=pizza.Size+' '+pizza.Crust;var pizzaSauce=pizza.Sauce;var cheese=pizza.Cheese;var meats=pizza.MeatToppings;var nonmeats=pizza.NonMeatToppings;var inst=pizza.SpecialInstructions;return{title:title,type:pizzaType,sauce:pizzaSauce,cheeses:cheese,meats:meats,nonMeats:nonmeats,inst:inst};}},{key:\"Name\",set:function set(value){this.orderName=value;var x=value.indexOf(' ');if(x!==-1){var str=value.substring(x+1);this.pickUpID=str+this.shortID;}else{this.pickUpID=value+this.shortID;}},get:function get(){return this.orderName;}},{key:\"PizzaCnt\",get:function get(){return this.pizzaCnt;}},{key:\"ReceiptNum\",get:function get(){return this.receiptNum;}},{key:\"PickUpID\",get:function get(){return this.pickUpID;}},{key:\"NextPizzaID\",get:function get(){return this.pizzaCnt+1;}},{key:\"CurrentPizza\",get:function get(){if(this.PizzaCnt===0){return null;}return this.pizzas[this.pizzaCnt-1];}},{key:\"OrderDate\",get:function get(){return this.orderDate;}},{key:\"Pizzas\",get:function get(){return this.pizzas;}},{key:\"EditID\",set:function set(v){this.editID=v;},get:function get(){return this.editID;}},{key:\"IsOrderEdit\",set:function set(val){this.isEdit=val;},get:function get(){return this.isEdit;}}]);return PizzaOrder;}();PizzaOrder.propTypes={orderName:PropTypes.string,pickUpID:PropTypes.string,receiptNum:PropTypes.string,shortID:PropTypes.string,pizzas:PropTypes.object,orderDate:PropTypes.Date};export default PizzaOrder;","map":{"version":3,"sources":["C:/Users/TheTOP/Documents/GitHub/pizza-chatbot-chk4/src/components/PizzaOrder.jsx"],"names":["Random","Pizza","PropTypes","PizzaOrder","orderDate","Date","mon","getMonth","day","getDate","m","d","shortID","receiptNum","orderName","pickUpID","pizzas","pizzaCnt","isEdit","editID","id","oSize","length","cnt","Error","p","concat","i","findIndex","PizzaID","pizza","newID","splice","filter","title","pizzaType","Size","Crust","pizzaSauce","Sauce","cheese","Cheese","meats","MeatToppings","nonmeats","NonMeatToppings","inst","SpecialInstructions","type","sauce","cheeses","nonMeats","value","x","indexOf","str","substring","PizzaCnt","v","val","propTypes","string","object"],"mappings":"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","sourcesContent":["import Random from 'random-id';\r\nimport Pizza from './Pizza';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PizzaOrder {\r\n\r\n  constructor() {\r\n    this.orderDate= new Date();    \r\n    const mon = this.orderDate.getMonth()+1;\r\n    const day = this.orderDate.getDate()+1;\r\n    const m = mon<10?'0'+mon: mon+ '';\r\n    const d = day<10?'0'+day: day+ '';\r\n    this.shortID='-'+m+d;\r\n    this.receiptNum = Random(8)+this.shortID;\r\n    this.orderName= '';\r\n    this.pickUpID= '';\r\n    this.pizzas= [];\r\n    this.pizzaCnt = 0;\r\n    this.isEdit = false;\r\n    this.editID = 0;      \r\n  }\r\n  set Name(value){    \r\n    this.orderName= value;\r\n    const x =value.indexOf(' ');    \r\n    if(x!==-1){\r\n      const str = value.substring(x+1);\r\n      this.pickUpID= str + this.shortID;\r\n    } else {\r\n      this.pickUpID= value + this.shortID;\r\n    }\r\n  }  \r\n  get Name(){\r\n    return this.orderName;  \r\n  }\r\n  get PizzaCnt(){\r\n    return this.pizzaCnt;\r\n  }  \r\n  get ReceiptNum(){\r\n    return this.receiptNum;\r\n  }\r\n  get PickUpID(){\r\n    return this.pickUpID;\r\n  }\r\n  get NextPizzaID(){\r\n    return this.pizzaCnt+1;\r\n  }\r\n  get CurrentPizza(){\r\n    if(this.PizzaCnt===0){\r\n      return null;\r\n    } \r\n    return this.pizzas[this.pizzaCnt-1];\r\n  }\r\n  get OrderDate(){\r\n    return this.orderDate;\r\n  }\r\n  get Pizzas(){    \r\n    return this.pizzas;\r\n  }\r\n  set EditID(v){\r\n    this.editID = v;\r\n  }\r\n  get EditID(){\r\n    return this.editID;\r\n  }\r\n  set IsOrderEdit(val){\r\n    this.isEdit = val;\r\n  }\r\n  get IsOrderEdit(){\r\n    return this.isEdit;\r\n  }\r\n  addNewPizza(id){        \r\n    const oSize = this.pizzas.length;\r\n    const cnt = this.pizzaCnt;    \r\n    if(oSize!==cnt){\r\n      new Error(\"Pizza Array Size Error\");\r\n    } else if(id!==(cnt+1)){\r\n      new Error(\"New Pizza ID Error\");\r\n    } else {\r\n      const p = new Pizza(id);\r\n      this.pizzas = this.pizzas.concat(p);\r\n      this.pizzaCnt++;\r\n      return p;\r\n    }\r\n  }\r\n  selectPizza(id){\r\n    const i = this.pizzas.findIndex(p => p.PizzaID === id);\r\n    if(i!==-1){\r\n      return this.pizzas[i]\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  editPizza(pizza){\r\n    const newID = pizza.PizzaID;\r\n    const i = this.pizzas.findIndex(p => p.PizzaID === newID);\r\n    if(i!==-1){\r\n      const p = pizza;      \r\n      this.pizzas.splice(i,1,p);\r\n    }\r\n  }\r\n  removePizza(id){    \r\n    const i = this.pizzas.findIndex(p => p.PizzaID === id);\r\n    if(i!==-1){\r\n      this.pizzas.splice(i,1);\r\n      this.pizzaCnt--;\r\n    }\r\n  }\r\n  getPizza(id){\r\n    const pizza = this.pizzas.filter(p => p.PizzaID === id)[0];\r\n    if(pizza===null){\r\n      return null;\r\n    }\r\n    const title = 'Pizza #'+ pizza.PizzaID + ' is a:';\r\n    const pizzaType = pizza.Size + ' ' + pizza.Crust;\r\n    const pizzaSauce = pizza.Sauce;\r\n    const cheese = pizza.Cheese;\r\n    const meats = pizza.MeatToppings;\r\n    const nonmeats = pizza.NonMeatToppings;\r\n    const inst = pizza.SpecialInstructions;\r\n    return ({\r\n      title: title,\r\n      type: pizzaType,\r\n      sauce: pizzaSauce,\r\n      cheeses: cheese,\r\n      meats: meats,\r\n      nonMeats:nonmeats,\r\n      inst:inst,\r\n    });\r\n  }  \r\n}\r\nPizzaOrder.propTypes = {\r\n  orderName: PropTypes.string,\r\n  pickUpID: PropTypes.string,\r\n  receiptNum: PropTypes.string,\r\n  shortID: PropTypes.string,  \r\n  pizzas: PropTypes.object,\r\n  orderDate: PropTypes.Date,\r\n};\r\n\r\nexport default PizzaOrder;\r\n"]},"metadata":{},"sourceType":"module"}